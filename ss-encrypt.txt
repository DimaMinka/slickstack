#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/ss-encrypt.txt ###########################################
#### path: /var/www/ss-encrypt #####################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Generates or renews free SSL certificates via OpenSSL (SS) and Certbot (CA) ##########
#### module version: Ubuntu 18.04 ##################################################################
####################################################################################################

## include SlickStack configuration ##
source /var/www/ss-config

## critical functions (aliases) ##
# apt () { DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' /usr/bin/apt -q --yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"; }
# wget () { wget --no-cache --no-cookies --tries=3 --timeout=15; }
# cp () { cp -R -f -d --no-preserve=mode,ownership; }
# rm () { rm -R -f; }
# mkdir () { mkdir -p; }

####################################################################################################
#### SS-Encrypt: Generate Self-Signed OpenSSL Certificate ##########################################
####################################################################################################

## MESSAGE ##
echo -e "\e[36mInstalling (or renewing) free SSL certs from OpenSSL and Certbot...\e[0m"

## TEMPORARY: hide bug/error in OpenSSL 1.1.1 ##
touch /home/${SUDO_USER}/.rnd
touch /home/${SFTP_USER}/.rnd

## create self-signed OpenSSL certificate ##
if [[ -z "$CSR_COUNTRY" ]]; then 
    openssl req -new -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/ssl/nginx.key -out /etc/ssl/nginx.crt -subj "/C=${SSL_COUNTRY}/ST=${SSL_STATE}/L=${SSL_CITY}/O=${SSL_COMPANY}/OU=${SSL_DEPT}/CN=${SITE_DOMAIN}"
else 
    openssl req -new -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/ssl/nginx.key -out /etc/ssl/nginx.crt -subj "/C=${CSR_COUNTRY}/ST=${CSR_STATE}/L=${CSR_CITY}/O=${CSR_COMPANY}/OU=${CSR_DEPT}/CN=${SITE_DOMAIN}"
fi

####################################################################################################
#### SS-Encrypt: Generate DH Parameters (Used Only When Cerbot SSL Is Active) ######################
####################################################################################################

if [[ "$SSL_TYPE" == "certbot" ]]; then 
    openssl dhparam -out /etc/ssl/dhparam.pem 2048
fi

####################################################################################################
#### SS-Encrypt: Restart Services (Nginx Server) ###################################################
####################################################################################################

/etc/init.d/nginx restart

####################################################################################################
#### Cerbot: Reminder To Activate CloudFlare (15 Minute Pause For Virgin Installs) #################
####################################################################################################

if [[ ! -f "/var/www/meta/.cherry" ]]; then
    secs=$((15 * 60))
    echo -e "\e[36m♬♬♬ **ELEVATOR MUSIC** ♬♬♬ ... Since this is a virgin SlickStack installation, we will now attempt to generate your very first Lets Encrypt SSL certificate for this domain using their remote API. However, for this to work correctly, your domain needs to fully resolve to this server's IP address, and must have CloudFlare already activated (in order to CA-sign the OpenSSL certificate)... so if you haven't done this yet, hurry up and activate CloudFlare on this domain right now (be sure to choose 'Full SSL' under the Crypto tab) and then come back here and push the ENTER key to proceed...\e[0m"
    while [ $secs -gt 0 ]; do
       echo -ne "$secs\033[0K\r"
       read -p -t 1
       : $((secs--))
    done
fi

####################################################################################################
#### SS-Encrypt: Prepare Public Challenge Directory + Regenerate Cerbot SSL Certificate ############
####################################################################################################

## ensure public challenge directory exists ##
## in future versions maybe hide this in a system folder (Nginx server block mask) ##
mkdir -p /var/www/html/.well-known
mkdir -p /var/www/html/.well-known/acme-challenge

## this folder used by server for e.g. Cerbot but also SFTP for things like Stripe ##
chown -R $SFTP_USER:www-data /var/www/html/.well-known
chmod 6775 /var/www/html/.well-known

## request/renew Certbot SSL certificate (via their remote API) ##
certbot certonly --noninteractive --agree-tos --register-unsafely-without-email -d ${SITE_DOMAIN} --webroot -w /var/www/html/

####################################################################################################
#### SS-Encrypt: Create Certbot Symlinks + Modify Nginx Configuration ##############################
####################################################################################################

## create symlinks for simpler Nginx config ##
ln -s /etc/letsencrypt/live/${SITE_DOMAIN}/cert.pem /etc/ssl/cert.pem &> /dev/null
ln -s /etc/letsencrypt/live/${SITE_DOMAIN}/privkey.pem /etc/ssl/privkey.pem &> /dev/null
ln -s /etc/letsencrypt/live/${SITE_DOMAIN}/chain.pem /etc/ssl/chain.pem &> /dev/null
ln -s /etc/letsencrypt/live/${SITE_DOMAIN}/fullchain.pem /etc/ssl/fullchain.pem &> /dev/null

## modify live Nginx configuration if Certbot successful + preferred ##
if [ -d  "/etc/letsencrypt/live" ] && [ -f  "/etc/ssl/cert.pem" ] && [ "$SSL_TYPE" == "certbot" ]; then
    sed -i "s#@/etc/ssl/nginx.crt#/etc/ssl/cert.pem#g" /etc/nginx/nginx.conf
    sed -i "s#@/etc/ssl/nginx.key#/etc/ssl/privkey.pem#g" /etc/nginx/nginx.conf
    sed -i "s/#@@//g" /etc/nginx/nginx.conf
    /etc/init.d/nginx restart
fi

####################################################################################################
#### SS-Encrypt: Reset Permissions (OpenSSL + Certbot) #############################################
####################################################################################################

chown root:root /etc/ssl/nginx.key
chown root:root /etc/ssl/nginx.crt
chown root:root /etc/ssl/cert.pem
chown root:root /etc/ssl/privkey.pem
chown root:root /etc/ssl/chain.pem
chown root:root /etc/ssl/fullchain.pem

####################################################################################################
#### SS-Encrypt: Restart Services Again If Certbot SSL Is Active (Nginx Server) ####################
####################################################################################################

if [[ "$SSL_TYPE" == "certbot" ]]; then 
    /etc/init.d/nginx restart
fi

####################################################################################################
#### SS-Encrypt: SUCCESS MESSAGE ###################################################################
####################################################################################################

echo -e "\e[36mSSL certificates have been successfully generated...\e[0m"

####################################################################################################
#### External References Used By SlickStack To Improve This Script #################################
####################################################################################################

## Ref: https://linuxize.com/post/secure-apache-with-let-s-encrypt-on-ubuntu-18-04/
## Ref: https://stackoverflow.com/a/57019299/1718491
## Ref: https://matthewlehner.net/lets-encrypt-with-nginx
## Ref: https://community.letsencrypt.org/t/how-often-should-i-run-the-cerbot-cron-job-to-update-the-certificates/18851
## Ref: https://community.letsencrypt.org/t/how-to-get-crt-and-key-files-from-i-just-have-pem-files/7348/2
## Ref: https://community.letsencrypt.org/t/certificate-path/24227
## Ref: https://www.cyberciti.biz/tips/linux-unix-pause-command.html
## Ref: https://stackoverflow.com/a/9483693/1718491
