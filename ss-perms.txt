#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/ss-perms.txt #############################################
#### path: /var/www/ss-perms #######################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: resets all file and user permissions across entire SlickStack server #################
#### module version: Ubuntu 18.04 ##################################################################
####################################################################################################

## include SlickStack configuration ##
source /var/www/ss-config

####################################################################################################
#### Reset Permissions: Ubuntu (System Files + Users + Groups) #####################################
####################################################################################################

## Ubuntu system files ##
chown root:root /etc/ssh/sshd_config
chown root:root /etc/sudoers
chown root:root /var/spool/cron/crontabs/root
chown root:root /etc/sysctl.conf
chmod 0440 /etc/ssh/sshd_config
chmod 0440 /etc/sudoers
chmod 0600 /var/spool/cron/crontabs/root
chmod 0664 /etc/sysctl.conf

## create wordpress group if does not exist and various SlickStack users/groups ##
addgroup wordpress &> /dev/null
adduser $user wordpress &> /dev/null ## deprecated soon
adduser $SFTP_USER wordpress &> /dev/null
adduser $SFTP_USER www-data &> /dev/null
adduser www-data wordpress &> /dev/null

####################################################################################################
#### Reset Permissions: SlickStack Core Files (Besides Public HTML Directory) ######################
####################################################################################################

## ensure directories exist (will not overwrite) ##
mkdir -p /var/www
mkdir -p /var/www/cache
mkdir -p /var/www/logs
mkdir -p /var/www/meta

## chroot (SFTP) user directory ##
chown root:root /var ## must be root:root
chown root:root /var/www ## must be root:root
chmod 0755 /var/www ## must be 0755

## SlickStack core scripts ##
chown root:root /var/www/*cron* ## must be root:root
chown root:root /var/www/ss* ## must be root:root
chown www-data:www-data /var/www/wp.sql ## root:root should also work
chmod 6770 /var/www/*cron* ## 4700 should also work
chmod 6770 /var/www/ss* ## 4700 should also work
chmod 0700 /var/www/ss-config
chmod 6770 /var/www/wp.sql

## its okay if the SFTP user accesses this stuff (but www-data access is the priority) ##
chown www-data:www-data /var/www/cache ## must be www-data:www-data
chown www-data:www-data /var/www/logs ## must be www-data:www-data
chown www-data:www-data /var/www/meta ## must be www-data:www-data
chmod 6775 /var/www/cache ## 6755 should also work
chmod 6775 /var/www/logs ## 6755 should also work
chmod 6775 /var/www/meta ## 6755 should also work

## ensure log files exist ##
if [ ! -f "/var/www/logs/clamav.log" ]; then touch "/var/www/logs/clamav.log"; fi
if [ ! -f "/var/www/logs/error.log" ]; then touch "/var/www/logs/error.log"; fi
if [ ! -f "/var/www/logs/mysql.log" ]; then touch "/var/www/logs/mysql.log"; fi
if [ ! -f "/var/www/logs/nginx.log" ]; then touch "/var/www/logs/nginx.log"; fi
if [ ! -f "/var/www/logs/redis.log" ]; then touch "/var/www/logs/redis.log"; fi

## individual log files ##
chown clamav:clamav /var/www/logs/clamav*.log*
chown www-data:www-data /var/www/logs/error*.log*
chown mysql:mysql /var/www/logs/mysql*.log*
chown www-data:www-data /var/www/logs/nginx*.log*
chown redis:redis /var/www/logs/redis*.log*

####################################################################################################
#### Reset Permissions: Public HTML Directory (WordPress) ##########################################
####################################################################################################

## ensure directories exist (will not overwrite) ##
mkdir -p /var/www/html
mkdir -p /var/www/html/wp-admin
mkdir -p /var/www/html/wp-content
mkdir -p /var/www/html/wp-content/languages
mkdir -p /var/www/html/wp-content/mu-plugins
mkdir -p /var/www/html/wp-content/temp
mkdir -p /var/www/html/wp-content/uploads
mkdir -p /var/www/html/wp-content/upgrade
mkdir -p /var/www/html/wp-includes

## ensure files exist ##
if [ ! -f "/var/www/html/wp-content/blacklist.txt" ]; then touch "/var/www/html/wp-content/blacklist.txt"; fi
if [ ! -f "/var/www/html/wp-content/functions.php" ]; then touch "/var/www/html/wp-content/functions.php"; fi

## public files ##
if [[ -z "$SFTP_USER" ]]; then 
    chown -R $user:wordpress /var/www/html
else 
    # chown -R $SFTP_USER:www-data /var/www/html
    chown -R $SFTP_USER:wordpress /var/www/html
fi

# chown -R www-data:wordpress /var/www/html/wp-content/temp
# chown -R www-data:wordpress /var/www/html/wp-content/mu-plugins
# chown -R www-data:wordpress /var/www/html/wp-content/uploads
chmod 6775 /var/www/html
find /var/www/html/ -type d -exec chmod 6775 {} \;

## reset file permissions ##
# chown www-data:www-data /var/www/html/wp-content/blacklist.txt
# chown www-data:www-data /var/www/html/wp-content/object-cache.php
# chown www-data:www-data /var/www/html/wp-content/functions.php
find /var/www/html/ -type f -not -path "*var/www/html/wp-content/uploads*" -exec chmod 6664 {} \;
find /var/www/html/wp-content/uploads/ -not -name "*.jpg" -not -name "*.jpeg" -not -name "*.png" -not -name "*.bmp" -not -name "*.webp" -not -name "*.gif" -not -name "*.tiff" -not -name "*.mp4" -not -name "*.vid" -type f -exec chmod 0664 {} \;
chmod 0660 /var/www/html/wp-config.php
chmod 0440 /var/www/html/wp-content/blacklist.txt
# chmod 6664 /var/www/html/wp-content/object-cache.php
# chmod 6664 /var/www/html/wp-content/functions.php

####################################################################################################
#### Reset Permissions: SlickStack (LEMP) Modules ##################################################
####################################################################################################

mkdir -p /var/run/mysqld
mkdir -p /var/run/php
mkdir -p /var/run/redis

chown root:root /etc/nginx/nginx.conf
chown root:root /etc/nginx/fastcgi.conf
chown root:root /etc/ssl/nginx.crt
chmod -R 700 /etc/ssl/nginx.crt
chown root:root /etc/ssl/nginx.key
chmod -R 700 /etc/ssl/nginx.key
chown root:root /etc/ssl/nginx.pem
chmod -R 700 /etc/ssl/nginx.pem
chown mysql:mysql /var/run/mysqld
chown root:root /etc/mysql/my.cnf
chown root:root /etc/mysql/mysql.cnf
chown root:root /etc/mysql/mysql.conf.d/mysqld.cnf

## always run WP-CLI as the www-data user (and allow SFTP user to run it) ##
chown root:root /usr/local/bin/
chown www-data:www-data /usr/local/bin/wp
chmod 6775 /usr/local/bin/wp

# chown www-data:www-data /var/run/php
chown root:root /etc/php/7.2/fpm/php.ini
chown root:root /etc/php/7.2/fpm/php-fpm.conf
chown root:root /etc/php/7.2/cli/php.ini

chown redis:redis /var/run/redis
chown redis:redis /etc/redis/redis.conf

####################################################################################################
#### Convert DOS Files To Unix Files (Requires Dos2Unix To Be Installed) ###########################
####################################################################################################

## might take a really long time if many files ##
if [[ "$SS_DOS2UNIX" == "true" ]]; then 
    find /var/www/html/ -type f -exec dos2unix -k -o -s {} \;
fi

####################################################################################################
#### Flush Redis Object Cache (Optional) ###########################################################
####################################################################################################

redis-cli flushall

####################################################################################################
#### External References Used By SlickStack To Improve This Script #################################
####################################################################################################

## Ref: https://unix.stackexchange.com/questions/203371/run-script-sh-vs-bash-script-sh-permission-denied/203372#203372
## Ref: https://stackoverflow.com/questions/14372645/convert-dos2unix-line-endings-for-all-files-in-a-directory/19284034#19284034
## Ref: https://stackoverflow.com/questions/11929461/how-can-i-run-dos2unix-on-an-entire-directory/11929475#11929475
## Ref: https://unix.stackexchange.com/questions/310432/bash-script-to-convert-all-files-of-a-given-type-from-unix-to-dos-format/310437#310437
## Ref: https://kb.iu.edu/d/acux
## Ref: https://stackoverflow.com/questions/2613800/how-to-convert-dos-windows-newline-crlf-to-unix-newline-lf-in-a-bash-script
## Ref: https://github.com/wp-cli/wp-cli/issues/3181
## Ref: https://github.com/wp-cli/wp-cli/issues/1241
## Ref: https://www.alexgeorgiou.gr/wp-cli-www-data-user-permissions-linux/
## Ref: https://www.darklaunch.com/php-normalize-newlines-line-endings-crlf-cr-lf-unix-windows-mac
## Ref: https://serverfault.com/questions/344544/what-is-the-first-digit-for-in-4-digit-octal-unix-file-permission-notation
## Ref: https://unix.stackexchange.com/questions/79395/how-does-the-sticky-bit-work
## Ref: https://superuser.com/questions/684213/why-are-execute-permissions-along-with-write-permissions-needed-for-creating-a-f
## Ref: https://ubuntuforums.org/showthread.php?t=2383638
## Ref: https://serverfault.com/questions/584986/bad-ownership-or-modes-for-chroot-directory-component
## Ref: https://stackoverflow.com/questions/6851909/how-do-i-delete-everything-in-redis
